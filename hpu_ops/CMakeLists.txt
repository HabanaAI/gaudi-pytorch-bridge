###############################################################################
#
#  Copyright (c) 2021-2025 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
###############################################################################

set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 17)
add_custom_command(OUTPUT
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op0.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op1.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op2.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op3.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op4.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op5.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op6.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op7.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op8.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op9.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_custom.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_quant.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_torchvision.cpp
                     ${CMAKE_BINARY_DIR}/generated/lazy/wrap_kernels_registrations.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op0.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op1.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op2.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op3.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op4.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op5.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op6.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op7.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op8.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op9.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op_custom.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op_quant.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/hpu_op_torchvision.cpp
                     ${CMAKE_BINARY_DIR}/generated/eager/wrap_kernels_registrations.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op0.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op1.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op2.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op3.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op4.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op5.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op6.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op7.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op8.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op9.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_op_custom.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops0.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops1.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops2.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops3.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops4.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops5.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops6.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops7.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops8.cpp
                     ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops9.cpp
                   COMMAND ${Python_EXECUTABLE} ${CMAKE_SOURCE_DIR}/scripts/gen_op.py
                     --output_dir=${CMAKE_BINARY_DIR}/generated
                     --yaml=${CMAKE_SOURCE_DIR}/scripts/hpu_op.yaml
                     ${TORCH_INSTALL_PREFIX}/include/ATen/RegistrationDeclarations.h
                     ${TORCH_INSTALL_PREFIX}/../torchgen/packaged/ATen/native/native_functions.yaml
                   MAIN_DEPENDENCY ${CMAKE_SOURCE_DIR}/scripts/gen_op.py
                   DEPENDS
                     ${CMAKE_SOURCE_DIR}/scripts/hpu_op.yaml
                     ${TORCH_INSTALL_PREFIX}/include/ATen/RegistrationDeclarations.h
)

# TODO (SW-153260): fix the warnings and start compiling autogenerated files with warnings enabled again
set_source_files_properties(
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op0.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op1.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op2.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op3.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op4.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op5.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op6.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op7.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op8.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op9.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_custom.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_quant.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_torchvision.cppision.cppision.cppision.cpp
  ${CMAKE_BINARY_DIR}/generated/lazy/wrap_kernels_registrations.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op0.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op1.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op2.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op3.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op4.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op5.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op6.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op7.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op8.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op9.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op_custom.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op_quant.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/hpu_op_torchvision.cppision.cpp
  ${CMAKE_BINARY_DIR}/generated/eager/wrap_kernels_registrations.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op0.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op1.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op2.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op3.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op4.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op5.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op6.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op7.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op8.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op9.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op_custom.cpp
  PROPERTIES COMPILE_FLAGS -w)

add_habana_library(habana_pytorch_backend_ops OBJECT
  backend/adaptive_avg_pool2d_gen.cpp
  backend/adaptive_avg_pool3d_gen.cpp
  backend/add_composite_gen.cpp
  backend/addmm_gen.cpp
  backend/addmv_gen.cpp
  backend/_add_relu_gen.cpp
  backend/addr_gen.cpp
  backend/all_gen.cpp
  backend/amax_amin_gen.cpp
  backend/any_gen.cpp
  backend/arange_gen.cpp
  backend/argmin_max_gen.cpp
  backend/_assert_async_gen.cpp
  backend/autocast_helpers.cpp
  backend/avg_pool2d_gen.cpp
  backend/avg_pool3d_gen.cpp
  backend/baddbmm_gen.cpp
  backend/batch_norm_gen.cpp
  backend/bernoulli_gen.cpp
  backend/binarycrossentropy_gen.cpp
  backend/binary_gen.cpp
  backend/bincount_gen.cpp
  backend/bitwise_gen.cpp
  backend/bitwise_shift_gen.cpp
  backend/bmm_gen.cpp
  backend/bucketize_gen.cpp
  backend/cast_to_fp8_hybrid_gen.cpp
  backend/cat_gen.cpp
  backend/cdist_gen.cpp
  backend/channelshuffle_gen.cpp
  backend/cholesky_gen.cpp
  backend/clamp_gen.cpp
  backend/clone_gen.cpp
  backend/compare_gen.cpp
  backend/constant_pad_gen.cpp
  backend/convolution_backward_overrideable_gen.cpp
  backend/convolution_overrideable_gen.cpp
  backend/count_nonzero_gen.cpp
  backend/ctc_loss_backward_gen.cpp
  backend/ctc_loss_custom.cpp
  backend/ctc_loss_gen.cpp
  backend/cumsum_gen.cpp
  backend/custom_softmax.cpp
  backend/deform_conv2d_gen.cpp
  backend/diag_gen.cpp
  backend/div_gen.cpp
  backend/div_mod_util.cpp
  backend/div_round_gen.cpp
  backend/dot_gen.cpp
  backend/_efficientzerotensor_gen.cpp
  backend/elu_gen.cpp
  backend/embedding_dense_backward_gen.cpp
  backend/embedding_gen.cpp
  backend/empty_gen.cpp
  backend/equal_gen.cpp
  backend/erfc_gen.cpp
  backend/expand_gen.cpp
  backend/exponential_gen.cpp
  backend/eye_gen.cpp
  backend/fake_quant_fp4_gen.cpp
  backend/fbgemm.cpp
  backend/fill_gen.cpp
  backend/flip_gen.cpp
  backend/floor_divide_gen.cpp
  backend/foreach_gen.cpp
  backend/fp8_ops.cpp
  backend/fp8_ops_gen.cpp
  backend/frac_gen.cpp
  backend/frexp_gen.cpp
  backend/full_gen.cpp
  backend/fused_clip_norm_gen.cpp
  backend/fused_dropout_gen.cpp
  backend/gather_gen.cpp
  backend/gelu_gen.cpp
  backend/geometric_gen.cpp
  backend/glu_gen.cpp
  backend/grid_sampler3d_gen.cpp
  backend/grid_sampler_gen.cpp
  backend/habana_random_ops.cpp
  backend/hardsigmoid_gen.cpp
  backend/hardtanh_gen.cpp
  backend/hpu_op_helper.cpp
  backend/huber_loss_gen.cpp
  backend/index_copy_gen.cpp
  backend/index_reduce_gen.cpp
  backend/index_fill_gen.cpp
  backend/index_gen.cpp
  backend/plain_index_gen.cpp
  backend/index_put_gen.cpp
  backend/index_select_gen.cpp
  backend/instance_norm_backward_gen.cpp
  backend/instance_norm_gen.cpp
  backend/int4_ops.cpp
  backend/isfinite_isinf_isnan_gen.cpp
  backend/isin_gen.cpp
  backend/isposneginf_gen.cpp
  backend/kthvalue_gen.cpp
  backend/kv_reorder_gen.cpp
  backend/layer_norm_gen.cpp
  backend/lazy_cast.cpp
  backend/leakyrelu_gen.cpp
  backend/lerp_gen.cpp
  backend/linalg_cross_gen.cpp
  backend/linear_backward_gen.cpp
  backend/linear_gen.cpp
  backend/linspace_gen.cpp
  backend/log10_gen.cpp
  backend/logical_gen.cpp
  backend/logit_gen.cpp
  backend/log_normal_gen.cpp
  backend/logsigmoid_gen.cpp
  backend/logsoftmax_gen.cpp
  backend/logspace_gen.cpp
  backend/masked_batch_gemm.cpp
  backend/masked_fill_gen.cpp
  backend/_masked_scale_gen.cpp
  backend/matmul.cpp
  backend/max_min_gen.cpp
  backend/maxpool_gen.cpp
  backend/median_gen.cpp
  backend/mish_gen.cpp
  backend/mm_gen.cpp
  backend/mixture_of_experts.cpp
  backend/mseloss_gen.cpp
  backend/multi_margin_loss_gen.cpp
  backend/multilabel_margin_loss_gen.cpp
  backend/multinomial_gen.cpp
  backend/mv_gen.cpp
  backend/nansum_gen.cpp
  backend/nantonum_gen.cpp
  backend/native_group_norm_gen.cpp
  backend/ne_gen.cpp
  backend/new_zeros_gen.cpp
  backend/nll_loss_gen.cpp
  backend/nms_batched.cpp
  backend/nonzero_gen.cpp
  backend/normal_gen.cpp
  backend/norm_gen.cpp
  backend/one_hot_gen.cpp
  backend/op_backend.cpp
  backend/optimizer_adamw_gen.cpp
  backend/optimizer_ema_gen.cpp
  backend/optimizer_lamb_gen.cpp
  backend/optimizer_lars_gen.cpp
  backend/optimizer_sgd_gen.cpp
  backend/optimizer_resource_apply_momentum_gen.cpp
  backend/pdist_gen.cpp
  backend/pixel_shuffle_gen.cpp
  backend/poisson_gen.cpp
  backend/pool_helpers.cpp
  backend/pow_gen.cpp
  backend/prelu_gen.cpp
  backend/put_gen.cpp
  backend/quant_dequant_gen.cpp
  backend/ragged_softmax.cpp
  backend/random_gen.cpp
  backend/randperm_gen.cpp
  backend/reduce_std_var_gen.cpp
  backend/reduction_gen.cpp
  backend/reduction_template.cpp
  backend/reflection_pad_gen.cpp
  backend/repeat_gen.cpp
  backend/repeat_interleave_gen.cpp
  backend/replication_pad_bwd_gen.cpp
  backend/replication_pad_gen.cpp
  backend/resize_gen.cpp
  backend/rms_norm_gen.cpp
  backend/roi_align.cpp
  backend/roll_gen.cpp
  backend/rotary_pos_embedding.cpp
  backend/round_gen.cpp
  backend/roundingfunc_gen.cpp
  backend/rrelu_with_noise_gen.cpp
  backend/scalar_tensor_gen.cpp
  backend/scaled_masked_softmax.cpp
  backend/scaled_triangular_softmax.cpp
  backend/scaled_mm_gen.cpp
  backend/scatter_add_gen.cpp
  backend/scatter_gen.cpp
  backend/scatter_reduce_gen.cpp
  backend/sdpa_gen.cpp
  backend/searchsorted_gen.cpp
  backend/select_backward_gen.cpp
  backend/select_gen.cpp
  backend/shrink_gen.cpp
  backend/sigmoid_gen.cpp
  backend/signbit_gen.cpp
  backend/slice_backward_gen.cpp
  backend/smooth_l1_loss_gen.cpp
  backend/softmax_fp8_gen.cpp
  backend/softmax_gen.cpp
  backend/softplus_gen.cpp
  backend/sort_gen.cpp
  backend/split_gen.cpp
  backend/squeeze_dims_gen.cpp
  backend/strided_insert_gen.cpp
  backend/take_gen.cpp
  backend/threshold_gen.cpp
  backend/topk_gen.cpp
  backend/topk_util.cpp
  backend/trace_gen.cpp
  backend/triangular_gen.cpp
  backend/unique2_gen.cpp
  backend/unique_gen.cpp
  backend/upsample_gen.cpp
  backend/upsample_ops.cpp
  backend/vdot_gen.cpp
  backend/weight_norm_gen.cpp
  backend/where_gen.cpp
  backend/xlogy_gen.cpp
  backend/zero_gen.cpp
  common/batched_matmul_output_shape.cpp
  common/convolution_gen.cpp
  common/reduction_template.cpp
  common/replication_pad.cpp
  common/scalar_dtype_range.cpp
  custom_op_outshape.cpp
  indexing_ops_helper.cpp
  shared_meta_common.cpp
  user_custom_op_descriptor.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops0.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops1.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops2.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops3.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops4.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops5.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops6.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops7.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops8.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_autocast_ops9.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op0.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op1.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op2.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op3.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op4.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op5.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op6.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op7.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op8.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op9.cpp
  ${CMAKE_BINARY_DIR}/generated/backend/hpu_op_custom.cpp
)
target_include_directories(habana_pytorch_backend_ops
  PUBLIC
    ${PROJECT_SOURCE_DIR})
target_include_directories(habana_pytorch_backend_ops SYSTEM
  PUBLIC
    $<TARGET_PROPERTY:Synapse,INTERFACE_INCLUDE_DIRECTORIES>
    $<TARGET_PROPERTY:hcl,INTERFACE_INCLUDE_DIRECTORIES>)
target_compile_definitions(habana_pytorch_backend_ops PUBLIC GENERIC_HELPERS)
set_target_properties(habana_pytorch_backend_ops PROPERTIES CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON CXX_EXTENSIONS OFF)
target_include_directories(habana_pytorch_backend_ops PRIVATE ${PROJECT_SOURCE_DIR}/pytorch_helpers ${CMAKE_BINARY_DIR})
target_link_libraries(habana_pytorch_backend_ops
  PRIVATE
    habana_serialization
    torch
    nlohmann_json::nlohmann_json
    absl::strings
    absl::str_format
    npu::hllogger
    npu::specs_external
)
add_habana_library(habana_pytorch_frontend_ops OBJECT
          cpu_fallback.cpp
          supported_dtypes.cpp
          indexing_ops_helper.cpp
          lazy/add_composite_gen.cpp
          lazy/arange_gen.cpp
          lazy/bernoulli_gen.cpp
          lazy/binary_gen.cpp
          lazy/binarycrossentropy_gen.cpp
          lazy/binaryscalar2tensor.cpp
          lazy/bitwise_gen.cpp
          lazy/bitwise_shift_gen.cpp
          lazy/compare_gen.cpp
          lazy/convolution_overrideable_gen.cpp
          lazy/convolution_backward_overrideable_gen.cpp
          lazy/div_round_gen.cpp
          lazy/embedding_gen.cpp
          lazy/fill_gen.cpp
          lazy/index_gen.cpp
          lazy/index_select_gen.cpp
          lazy/maxpool_gen.cpp
          lazy/optimizer_lamb_gen.cpp
          lazy/pow_gen.cpp
          lazy/random_gen.cpp
          lazy/topk_gen.cpp
          lazy/unique_gen.cpp
          lazy/upsample_gen.cpp
          lazy/xlogy_gen.cpp
          op_logger.cpp
          op_validator.cpp
          # autogenerated files:
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op0.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op1.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op2.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op3.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op4.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op5.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op6.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op7.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op8.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op9.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_custom.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_quant.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/hpu_op_torchvision.cpp
          ${CMAKE_BINARY_DIR}/generated/lazy/wrap_kernels_registrations.cpp)
target_include_directories(habana_pytorch_frontend_ops
  PUBLIC
    ${PROJECT_SOURCE_DIR})
target_include_directories(habana_pytorch_frontend_ops SYSTEM
  PUBLIC
    $<TARGET_PROPERTY:Synapse,INTERFACE_INCLUDE_DIRECTORIES>
    $<TARGET_PROPERTY:SynapseUtils,INTERFACE_INCLUDE_DIRECTORIES>
    $<TARGET_PROPERTY:hcl,INTERFACE_INCLUDE_DIRECTORIES>)
target_compile_definitions(habana_pytorch_frontend_ops PUBLIC GENERIC_HELPERS)
set_target_properties(habana_pytorch_frontend_ops PROPERTIES CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON CXX_EXTENSIONS OFF)
target_include_directories(habana_pytorch_frontend_ops PRIVATE ${PROJECT_SOURCE_DIR}/pytorch_helpers ${CMAKE_BINARY_DIR})
target_link_libraries(habana_pytorch_frontend_ops
  PRIVATE
    habana_serialization
    pytorch_synapse_utils_shim
    torch
    nlohmann_json::nlohmann_json
    absl::strings
    absl::str_format
    npu::hllogger
)
