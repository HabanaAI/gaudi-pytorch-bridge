/*******************************************************************************
 * Copyright (C) 2022-2024 Habana Labs, Ltd. an Intel Company
 * All Rights Reserved.
 *
 * Unauthorized copying of this file or any element(s) within it, via any medium
 * is strictly prohibited.
 * This file contains Habana Labs, Ltd. proprietary and confidential information
 * and is subject to the confidentiality and license agreements under which it
 * was provided.
 *
 *******************************************************************************
 */

#include "habana_kernels/kernel_input_checks.h"
#include <c10/core/ScalarType.h>
#include "habana_helpers/dtype_helpers.h"
#include "habana_helpers/logging_pt.h"
#include "habana_helpers/pt_version_check.h"

std::unordered_map<
    std::string,
    std::unordered_map<int, std::vector<c10::IValue>>>
    OpAttributeCheck::ivalue_op_info = {};

void OpAttributeCheck::populate_attribute_checks() {
  OpAttributeCheck::ivalue_op_info = {
      // Checking for addmm op for argument 4 and 5 which is beta and alpha
      {"addmm",
       {{4, {c10::IValue(1), c10::IValue(1.0)}},
        {5, {c10::IValue(1), c10::IValue(1.0)}}}},
      // checking for divisor_override = None
      {"avg_pool2d", {{7, {c10::IValue(c10::nullopt)}}}},
      // checking for divisor_override = None
      {"avg_pool2d_backward", {{8, {c10::IValue(c10::nullopt)}}}},
      // checking for divisor_override = None
      {"avg_pool2d_backward_out", {{8, {c10::IValue(c10::nullopt)}}}},
      // checking for weights = None/undefined, reduction = Mean or Sum
      {"binary_cross_entropy",
       {{3, {c10::IValue(false), c10::IValue(c10::nullopt)}},
        {4,
         {c10::IValue(at::Reduction::Reduction::Mean),
          c10::IValue(at::Reduction::Reduction::Sum)}}}},
      // Checking for BCE bwd operator for argument 4 for weights =
      // None/undefined,
      // reduction = Mean or Sum
      {"binary_cross_entropy_backward",
       {{4, {c10::IValue(false), c10::IValue(c10::nullopt)}},
        {5,
         {c10::IValue(at::Reduction::Reduction::Mean),
          c10::IValue(at::Reduction::Reduction::Sum)}}}},
      // checking for reduction = Mean or Sum or None
      {"kl_div",
       {{3,
         {c10::IValue(at::Reduction::Reduction::None),
          c10::IValue(at::Reduction::Reduction::Mean),
          c10::IValue(at::Reduction::Reduction::Sum)}}}},
      // checking for reduction = Mean or Sum or None
      {"kl_div_backward",
       {{4,
         {c10::IValue(at::Reduction::Reduction::None),
          c10::IValue(at::Reduction::Reduction::Mean),
          c10::IValue(at::Reduction::Reduction::Sum)}}}},
      // checking scale = 1 & input_scale = 1
      {"elu",
       {{3, {c10::IValue(1), c10::IValue(1.0)}},
        {4, {c10::IValue(1), c10::IValue(1.0)}}}},
      // checking sparse_grad = false
      {"gather", {{4, {c10::IValue(false)}}}},
      // checking for half_to_float = false
      {"_log_softmax", {{3, {c10::IValue(false)}}}},
      // checking for weights = None/undefined
      {"nll_loss_forward",
       {{3, {c10::IValue(false), c10::IValue(c10::nullopt)}}}},
      // checking for weights = None/undefined
      {"nll_loss2d_forward",
       {{3, {c10::IValue(false), c10::IValue(c10::nullopt)}}}},
      // checking for weights = None/undefined
      {"nll_loss_backward",
       {{4, {c10::IValue(false), c10::IValue(c10::nullopt)}}}},
      // checking for weights = None/undefined
      {"nll_loss2d_backward",
       {{4, {c10::IValue(false), c10::IValue(c10::nullopt)}}}},
      // checking for half_to_float = false
      {"_softmax", {{3, {c10::IValue(false)}}}},
      // checking for thresold = 0
      {"threshold_backward", {{3, {c10::IValue(0), c10::IValue(0.0)}}}},
      // checking for sorted = true
      {"topk", {{5, {c10::IValue(true)}}}},
      // checking sorted, return_inverse, return_counts = false
      {"unique", {{3, {c10::IValue(false)}}, {4, {c10::IValue(false)}}}}};
}

void OpAttributeCheck::hpu_check_ivalues(
    std::string oper_name,
    torch::jit::Stack& inputs) {
  op_name = oper_name;
  for (auto input : inputs) {
    if ((is_valid) && (ivalue_op_info.find(op_name) != ivalue_op_info.end())) {
      auto result = ivalue_op_info.find(op_name);
      if ((result->second.find(arg_position) != result->second.end())) {
        auto result_set = std::find(
            result->second[arg_position].begin(),
            result->second[arg_position].end(),
            input);
        if (result_set != result->second[arg_position].end()) {
          is_valid &= true;
        } else {
          PT_FALLBACK_DEBUG(
              "Attribute check failed for: ",
              op_name,
              " at argument position: ",
              arg_position,
              " Expected value: ",
              result->second[arg_position],
              " Input value given for attribute: ",
              input,
              " This op will fallback to CPU");
          is_valid &= false;
          break;
        }
      }
    }
    arg_position++;
  }
}

#if HAVE_FP8_SUPPORT
#define FP8_DTYPES , at::ScalarType::Float8_e5m2, at::ScalarType::Float8_e4m3fn
#else
#define FP8_DTYPES
#endif

const std::unordered_map<std::string, std::vector<std::set<at::ScalarType>>>
    op_info = {
        {
            "_reshape_alias",
            {{at::ScalarType::Float,
              at::ScalarType::Short,
              at::ScalarType::Char,
              at::ScalarType::Double,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Long,
              at::ScalarType::Half,
              at::ScalarType::BFloat16,
              at::ScalarType::Byte FP8_DTYPES}},
        },
        {
            "set_",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "addcmul",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "addcmul_",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "addcdiv",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "addcdiv_",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "rsub",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "eq_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "ne",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "all",
            {{
                at::ScalarType::Bool,
            }},
        },
        {
            "embedding_bag_sum_fwd",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "embedding_bag_sum_bwd_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "fill_",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {"masked_select",
         {{at::ScalarType::Double,
           at::ScalarType::BFloat16,
           at::ScalarType::Int,
           at::ScalarType::Float,
           at::ScalarType::Long},
          {at::ScalarType::Bool},
          {at::ScalarType::Double,
           at::ScalarType::BFloat16,
           at::ScalarType::Int,
           at::ScalarType::Float,
           at::ScalarType::Long}}},
        {
            "index_add_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "slice",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "select_backward",
            {{at::ScalarType::Bool,
              at::ScalarType::Double,
              at::ScalarType::Long,
              at::ScalarType::BFloat16,
              at::ScalarType::Byte,
              at::ScalarType::Short,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Int}},
        },
        {
            "addmm",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "dot",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "nll_loss_forward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "nll_loss_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "nll_loss2d_forward",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long}},
        },
        {
            "nll_loss2d_backward",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long}},
        },
        {
            "mse_loss_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "kl_div",
            {{at::ScalarType::Float, at::ScalarType::BFloat16}},
        },
        {
            "kl_div_backward",
            {{at::ScalarType::Float, at::ScalarType::BFloat16}},
        },
        {
            "binary_cross_entropy_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "norm",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "sum_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Int,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "mean_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "max",
            {
                {
                    at::ScalarType::BFloat16,
                    at::ScalarType::Float,
                    at::ScalarType::Double,
                    at::ScalarType::Char,
                    at::ScalarType::Byte,
                    at::ScalarType::Short,
                    at::ScalarType::Int,
                    at::ScalarType::Long,
                    at::ScalarType::Bool,
                },
            },
        },
        {
            "min",
            {
                {
                    at::ScalarType::BFloat16,
                    at::ScalarType::Float,
                    at::ScalarType::Double,
                    at::ScalarType::Short,
                    at::ScalarType::Int,
                    at::ScalarType::Long,
                },
            },
        },
        {
            "any",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "_log_softmax_backward_data",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "empty",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "empty_strided",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Half,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "cat",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "cat_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "split_with_sizes",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Half,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "threshold_backward",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "sigmoid_backward",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "tanh_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "tanh_backward",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "hbgelu2",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "hbgelu2_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "idop_",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "idop",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "neg_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "reciprocal_out",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "clamp_min",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "silu",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "silu_out",
            {{at::ScalarType::Float,
              at::ScalarType::Double,
              at::ScalarType::BFloat16}},
        },
        {
            "silu_backward",
            {{at::ScalarType::Float,
              at::ScalarType::Double,
              at::ScalarType::BFloat16}},
        },
        {
            "linspace",
            {{at::ScalarType::Float,
              at::ScalarType::Double,
              at::ScalarType::BFloat16}},
        },
        {
            "linspace_out",
            {{at::ScalarType::Float,
              at::ScalarType::Double,
              at::ScalarType::BFloat16}},
        },
        {
            "stack",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "_unsafe_view",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Half,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "split",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Half,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "upsample_nearest2d",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Byte,
              at::ScalarType::Float}},
        },
        {
            "upsample_nearest2d_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Byte,
              at::ScalarType::Float}},
        },
        {
            "upsample_nearest3d",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Byte,
              at::ScalarType::Float}},
        },
        {
            "upsample_nearest3d_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Byte,
              at::ScalarType::Float}},
        },
        {
            "ones_like",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "hardsigmoid_backward",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "matmul_backward",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "matmul",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "index",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Float,
              at::ScalarType::Long FP8_DTYPES}},
        },
        {
            "sub",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "sub_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "pow",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "pow_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maximum",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "minimum",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "gt",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "eq",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "lt",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "ge",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "le",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "scatter_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "scatter",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "scatter_add_",
            {{at::ScalarType::Float,
              at::ScalarType::Long,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "mse_loss",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "binary_cross_entropy",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "normal_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bernoulli",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bernoulli_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "_log_softmax",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sort",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Half,
              at::ScalarType::Short}},
        },
        {
            "elu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "elu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sigmoid",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sqrt",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "tanh",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "tanh_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "erf_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "erf",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "exp_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "exp",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reciprocal_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reciprocal",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "remainder",
            {{at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Int,
              at::ScalarType::Short,
              at::ScalarType::Long}},
        },
        {
            "remainder_",
            {{at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Int,
              at::ScalarType::Short,
              at::ScalarType::Long}},
        },
        {
            "remainder_out",
            {{at::ScalarType::Char,
              at::ScalarType::Bool,
              at::ScalarType::Int,
              at::ScalarType::Short,
              at::ScalarType::Long}},
        },
        {
            "triu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "tril",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {

            "clamp_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "clamp",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "abs_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "abs",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "round",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "round_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "rsqrt",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "rsqrt_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "neg",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "sin",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "cos",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "floor",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "floor_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "log",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "log_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "log2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "log2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bitwise_or_out",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Bool}},
        },
        {
            "bitwise_and_out",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Bool}},
        },
        {
            "bitwise_xor_out",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Bool}},
        },
        {
            "bitwise_not_out",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Bool}},
        },
        {
            "hardsigmoid_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "hardsigmoid",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "repeat_interleave",
            {{at::ScalarType::Long, at::ScalarType::Int}},
        },
        {
            "nonzero_out",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Bool}},
        },
        {
            "and",
            {{at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "and_",
            {{at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "argmax",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "argmax_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "argmin",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "argmin_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "averaged_loss",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "averaged_loss_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "avg_pool_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "avg_pool_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "avg_pool_3d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "avg_pool_3d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "native_batch_norm_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_inf",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stats",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_elemt",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_backward_elemt",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_backward_reduce",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_gather_stats_with_counts",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },

        {
            "batch_norm_inf_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage1_dynamic",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage1_dynamic_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_add_relu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_add_relu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_dynamic_add_relu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_dynamic_add_relu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_dynamic",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_dynamic_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_dynamic_relu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_dynamic_relu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_relu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_stage2_relu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_variance_inf",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "batch_norm_variance_inf_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "binary_cross_entropy_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bitonic_sort",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "bitonic_sort_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "bitshift",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char}},
        },
        {
            "bitshift_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char}},
        },
        {
            "bitwise_and_out_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char}},
        },
        {
            "bitwise_not_out_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char}},
        },
        {
            "bitwise_or_out_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char}},
        },
        {
            "bitwise_xor_out_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Byte,
              at::ScalarType::Char}},
        },
        {
            "bn_get_moments_stage1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bn_get_moments_stage1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bn_get_moments_stage2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "bn_get_moments_stage2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "broadcast_nd",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "broadcast_nd_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "ceil",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "ceil_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "constant",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "constant_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "crop_and_resize",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "crop_and_resize_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "cumprod",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "cumprod_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "cumsum",
            {{
                at::ScalarType::Int,
                at::ScalarType::Long,
                at::ScalarType::Double,
                at::ScalarType::Float,
                at::ScalarType::BFloat16,
                at::ScalarType::Bool,
                at::ScalarType::Char,
            }},
        },
        {
            "cumsum_",
            {{
                at::ScalarType::Int,
                at::ScalarType::Long,
                at::ScalarType::Double,
                at::ScalarType::Float,
                at::ScalarType::BFloat16,
                at::ScalarType::Bool,
                at::ScalarType::Char,
            }},
        },
        {
            "diag",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "diag_out",
            {{at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "div_mod",
            {{at::ScalarType::Char,
              at::ScalarType::Short,
              at::ScalarType::Long,
              at::ScalarType::Int}},
        },
        {
            "div_mod_",
            {{at::ScalarType::Char,
              at::ScalarType::Short,
              at::ScalarType::Long,
              at::ScalarType::Int}},
        },
        {
            "dropout",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "dropout_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "embedding_bag_max",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "embedding_bag_max_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "embedding_bag_sum_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "embedding_bag_sum_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "embedding_bag_sum_mid_lengths_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "embedding_bag_sum_mid_lengths_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "embedding_bag_sum_small_lengths_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "embedding_bag_sum_small_lengths_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "eq_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "exp_fast",
            {{at::ScalarType::BFloat16}},
        },
        {
            "exp_fast_",
            {{at::ScalarType::BFloat16}},
        },
        {
            "filter_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "filter_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "filter_3d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "filter_3d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "filter_and_squeeze",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "filter_and_squeeze_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "fused_bias_relu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "fused_bias_relu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gather_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "gather_elements",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "gather_elements_",
            {{at::ScalarType::Double,
              at::ScalarType::BFloat16,
              at::ScalarType::Short,
              at::ScalarType::Byte,
              at::ScalarType::Int,
              at::ScalarType::Bool,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::Long}},
        },
        {
            "gather_nd",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "gather_nd_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "gather_nd_mxnet",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gather_nd_mxnet_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gather_with_valid_count_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gather_with_valid_count_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gconv",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gconv_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "gelu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "generate_bitonic_chunks",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "generate_bitonic_chunks_",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "gt_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "ge_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "instance_norm",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "instance_norm_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "isinf",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "isinf_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "isnan_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "large_bitonic_merge",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "large_bitonic_merge_",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "native_layer_norm_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "layer_norm_stage1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "layer_norm_stage1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "layer_norm_stage2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "layer_norm_stage2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lengths_range_fill",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "lengths_range_fill_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "lengths_sum",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lengths_sum_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lt_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "le_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "log_lut",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "log_lut_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "_log_softmax_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lpnorm",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lpnorm_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lpnorm_frobenius_stage1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lpnorm_frobenius_stage1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lpnorm_frobenius_stage2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lpnorm_frobenius_stage2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "lrn",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "lrn_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "lrn_tf",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "lrn_tf_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "matrix_band_part",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "matrix_band_part_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "matrix_diag_part",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "matrix_diag_part_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "matrix_diagonal",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "matrix_diagonal_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maximum_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "maxpool_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maxpool_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maxpool_3d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maxpool_3d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maxpool_roi",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "maxpool_roi_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "mean_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "memcpy",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "memcpy_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "memcpy_nd",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "memcpy_nd_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "minimum_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "mse_loss_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "neg_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "nll_loss",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nll_loss_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nll_loss_st1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nll_loss_st1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nll_loss_st2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nll_loss_st2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nms",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nms_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "nonzero_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "not",
            {{at::ScalarType::Char, at::ScalarType::Byte}},
        },
        {
            "not_",
            {{at::ScalarType::Char, at::ScalarType::Byte}},
        },
        {
            "one_hot_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_adagrad",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_adagrad_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_hogwild_sparse_adagrad_with_valid_count_2d",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "optimizer_hogwild_sparse_adagrad_with_valid_count_2d_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "optimizer_sgd",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "optimizer_sgd_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "optimizer_sparse_adagrad",
            {{at::ScalarType::BFloat16}},
        },
        {
            "optimizer_sparse_adagrad_",
            {{at::ScalarType::BFloat16}},
        },
        {
            "optimizer_sparse_adagrad_with_valid_count_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_sparse_adagrad_with_valid_count_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_sparse_rowwise_adagrad_with_valid_count_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_sparse_rowwise_adagrad_with_valid_count_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_sparse_sgd",
            {{at::ScalarType::BFloat16}},
        },
        {
            "optimizer_sparse_sgd_",
            {{at::ScalarType::BFloat16}},
        },
        {
            "optimizer_sparse_sgd_with_valid_count_2d",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "optimizer_sparse_sgd_with_valid_count_2d_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "or",
            {{at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "or_",
            {{at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "constant_pad_nd_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "permute_pooled_embeddings",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "permute_pooled_embeddings_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "permute_softmax",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "permute_softmax_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "post_nms",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "post_nms_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "pow2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "pow2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "prelu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "prelu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "printf_vpu_demo",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "printf_vpu_demo_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "probe_nan",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "probe_nan_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "pyramid_roi_align_st1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "pyramid_roi_align_st1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "pyramid_roi_align_st2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "pyramid_roi_align_st2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "quad_tree",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "quad_tree_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "random_exponential",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_exponential_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_gamma",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_gamma_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_multinomial",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_multinomial_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_negative_binomial",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_negative_binomial_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "normal__",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_poisson",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_poisson_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "random_shuffle",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "random_shuffle_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "uniform__",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "range",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "range_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "reduce_L1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_L1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_L2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_L2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_Lp",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_Lp_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_log_sum",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_log_sum_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_log_sum_exp",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_log_sum_exp_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_max",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "reduce_max_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "reduce_mean",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_mean_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_min",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_min_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_prod",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_prod_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "reduce_sum_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "reduce_sum_square",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_square_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_square_stage1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_square_stage1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_stage1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_stage1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_stage2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reduce_sum_stage2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu6",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu6_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu6_keep_index",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu6_keep_index_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu_keep_index",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "relu_keep_index_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "resampler",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "resampler_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "resampler_grad",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "resampler_grad_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reshape",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "reshape_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16 FP8_DTYPES}},
        },
        {
            "resize",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "resize_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "reverse",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "reverse_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "scalar_merge",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "scalar_merge_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "scatter_div",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_div_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_max",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_max_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_min",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_min_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_mul",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_mul_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_mxnet",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_mxnet_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_onnx",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_onnx_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_update",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_nd_update_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_sub",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "scatter_sub_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "selu",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "selu_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sequence_reverse",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "sequence_reverse_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "shape",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "shape_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "sigmoid_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sigmoid_cross_entropy_with_logits",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sigmoid_cross_entropy_with_logits_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sin_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sinh",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "sinh_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "size",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "size_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "small_bitonic_merge",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "small_bitonic_merge_",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "_softmax_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softmax_cross_entropy",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softmax_cross_entropy_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softmax_cross_entropy_dynamic",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softmax_cross_entropy_dynamic_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softplus",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softplus_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softsign",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "softsign_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sort_",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "sort_pre_process",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "sort_pre_process_",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "space_to_batch",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "space_to_batch_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_lengths_sum",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_lengths_sum_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_lengths_sum_p1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_lengths_sum_p1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_lengths_weighted_sum",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_lengths_weighted_sum_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_segment_sum",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sparse_segment_sum_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "spatial_correlation",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "spatial_correlation_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "sqrt_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "tan",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "tan_",
            {{at::ScalarType::Float, at::ScalarType::Double}},
        },
        {
            "tf_where_stage1",
            {{at::ScalarType::Char}},
        },
        {
            "tf_where_stage1_",
            {{at::ScalarType::Char}},
        },
        {
            "tf_where_stage2",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "tf_where_stage2_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "tile",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "tile_",
            {{at::ScalarType::Short,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "topk_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "top_k_st1",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "top_k_st1_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "top_k_st2",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "top_k_st2_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "unique",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "unique_",
            {{at::ScalarType::Float,
              at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double}},
        },
        {
            "unravel_index",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "unravel_index_",
            {{at::ScalarType::Int, at::ScalarType::Long}},
        },
        {
            "unsorted_segment_sum",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "unsorted_segment_sum_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "upsample",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "upsample_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "where",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "where_",
            {{at::ScalarType::Int,
              at::ScalarType::Long,
              at::ScalarType::Double,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "xavier_fill",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "xavier_fill_",
            {{at::ScalarType::Float,
              at::ScalarType::BFloat16,
              at::ScalarType::Double}},
        },
        {
            "xor",
            {{at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
        {
            "xor_",
            {{at::ScalarType::Double,
              at::ScalarType::Byte,
              at::ScalarType::Char,
              at::ScalarType::Float,
              at::ScalarType::BFloat16}},
        },
};

OpSupportLevel hpu_check_inputs_impl(
    const std::string& op,
    const std::vector<at::Tensor>& tensors) {
  // Synchronize acc thread, if Op is not supported for parallel acc yet.
  habana_lazy::AccThread::Get().SyncManualOpIfNeeded(op);

  const auto& supported_types = op_info.at(op);
  size_t i = 0;
  if (habana::HpuFallbackHelper::get()->is_placed_on_cpu(op))
    return OpSupportLevel::Value::placed_on_cpu;
  for (const auto& tensor : tensors) {
    if (!tensor.defined()) {
      continue;
    }

    const auto& dtype = tensor.scalar_type();
    if (at::isComplexType(dtype)) {
      return OpSupportLevel::Value::unsupported;
    }
    // When same types are applicable to all input tensors, use the only one
    // defined
    size_t j = (supported_types.size() == 1) ? 0 : i;

    if (!supported_types.at(j).count(dtype)) {
      return OpSupportLevel::Value::unsupported_dtype;
    }
    i++;
  }
  return OpSupportLevel::Value::supported;
}
