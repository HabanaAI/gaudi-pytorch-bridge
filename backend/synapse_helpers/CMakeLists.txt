# ##############################################################################
# Copyright (C) 2020-2023 Habana Labs, Ltd. an Intel Company
# All Rights Reserved.
#
# Unauthorized copying of this file or any element(s) within it, via any medium
# is strictly prohibited.
# This file contains Habana Labs, Ltd. proprietary and confidential information
# and is subject to the confidentiality and license agreements under which it
# was provided.
#
# ##############################################################################

add_habana_library(
  pytorch_synapse_helpers OBJECT
  tcmalloc_helper.cpp
  device.cpp
  env_flags.cpp
  event.cpp
  event_handle_cache.cpp
  device_context.cpp
  device_helpers.cpp
  device_memory.cpp
  devmem_logger.cpp
  graph.cpp
  habana_tensor.cpp
  hccl_communicator.cpp
  host_memory.cpp
  logger_stub.cpp
  lightweight_memory_usage_logger.cpp
  mem_handle.cpp
  mem_hlml.cpp
  memory_defragmentation.cpp
  memory_mapping.cpp
  pool_allocator/utils.cpp
  pool_allocator/CoalescedStringentPoolAllocator.cpp
  RealTimeMemoryLogger.cpp
  recipe.cpp
  recipe_handle_cache.cpp
  status_conversion.cpp
  stream_event_manager.cpp
  session.cpp
  stream.cpp
  tensor_builder_base.cpp
  util.cpp

  # Autogenerated file
  ${CMAKE_BINARY_DIR}/generated/env_flags/env_flags_definition_generated.cpp)

target_include_directories(
  pytorch_synapse_helpers
  PUBLIC ${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/pytorch_helpers ${CMAKE_BINARY_DIR}
)

target_include_directories(
  pytorch_synapse_helpers SYSTEM
  PUBLIC $<TARGET_PROPERTY:Synapse,INTERFACE_INCLUDE_DIRECTORIES>
  $<TARGET_PROPERTY:tpc_kernels,INTERFACE_INCLUDE_DIRECTORIES>
  $<TARGET_PROPERTY:hcl,INTERFACE_INCLUDE_DIRECTORIES>
  $<TARGET_PROPERTY:npu::specs_embedded,INTERFACE_INCLUDE_DIRECTORIES>
)

add_dependencies(pytorch_synapse_helpers pytorch_generate_env)

set_target_properties(pytorch_synapse_helpers PROPERTIES OUTPUT_NAME "pytorch_synapse_helpers")

target_link_libraries(
  pytorch_synapse_helpers
  PUBLIC absl::strings
  absl::optional
  absl::flags
  absl::variant
  absl::hash
  absl::raw_hash_set
  npu::hllogger
  npu::fmt
  npu::specs_embedded
  PRIVATE
  Python::Python
  torch
)
target_compile_features(pytorch_synapse_helpers PUBLIC cxx_std_14) # still required as this is transitive
set_target_properties(
  pytorch_synapse_helpers
  PROPERTIES CXX_STANDARD 17
  CXX_STANDARD_REQUIRED ON
  CXX_EXTENSIONS OFF)
target_compile_definitions(pytorch_synapse_helpers PUBLIC GENERIC_HELPERS)

if(MANYLINUX)
  target_link_libraries(pytorch_synapse_helpers PUBLIC pytorch_synapse_shim npu::specs_embedded)
else()
  target_link_libraries(pytorch_synapse_helpers PUBLIC Synapse npu::specs_embedded)
endif()

separate_debug_symbols(pytorch_synapse_helpers)
export(
  TARGETS pytorch_synapse_helpers
  NAMESPACE synapse_helpers::
  FILE synapse_helpersConfig.cmake)
set(CMAKE_EXPORT_PACKAGE_REGISTRY ON)
export(PACKAGE synapse_helpers)
